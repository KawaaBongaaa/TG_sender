/* =========================================== */
/* –¢–µ–ª–µ–≥—Ä–∞–º –ë–æ—Ç—ã - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞–º–∏ –∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏ */
/* –ú–æ–¥—É–ª—å –¥–ª—è Telegram Sender WebApp */
/* =========================================== */

class TelegramBots {
    constructor(telegramSender) {
        this.sender = telegramSender; // –°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
        console.log('ü§ñ TelegramBots module initialized');
    }

    init() {
        console.log('ü§ñ TelegramBots module init - setting up event listeners...');
        this.setupBotEventListeners();
        console.log('ü§ñ TelegramBots module init completed');
    }

    /**
     * –î–û–ë–ê–í–õ–ï–ù–ò–ï –ù–û–í–û–ì–û –ë–û–¢–ê
     */
    addBot(name, token) {
        if (!name || !token) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –∏ API —Ç–æ–∫–µ–Ω!');
            return null;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞
        if (this.sender.bots.some(bot => bot.token === token)) {
            alert('–ë–æ—Ç —Å —Ç–∞–∫–∏–º —Ç–æ–∫–µ–Ω–æ–º —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω!');
            return null;
        }

        const bot = {
            id: 'bot_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),
            name: name.trim(),
            token: token.trim(),
            sheets: [], // –¢–∞–±–ª–∏—Ü—ã —ç—Ç–æ–≥–æ –±–æ—Ç–∞
            created: new Date().toISOString()
        };

        this.sender.bots.push(bot);
        this.saveBots();

        // ‚úÖ –î–û–ë–ê–í–õ–Ø–ï–ú –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ù–¢–ï–†–§–ï–ô–°–ê
        this.updateBotSelectionUI();
        this.updateBotListContainer();

        console.log('ü§ñ Added bot:', bot.name);
        this.sender.addToLog(`–î–æ–±–∞–≤–ª–µ–Ω –±–æ—Ç: ${bot.name}`);

        return bot;
    }

    /**
     * –£–î–ê–õ–ï–ù–ò–ï –ë–û–¢–ê
     */
    deleteBot(botId) {
        const botIndex = this.sender.bots.findIndex(bot => bot.id === botId);
        if (botIndex === -1) {
            console.warn('–ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', botId);
            return false;
        }

        // –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
        if (this.sender.currentBot && this.sender.currentBot.id === botId) {
            this.sender.currentBot = null;
            this.sender.currentSheet = null;
            this.updateBotSelectionUI();
        }

        const botName = this.sender.bots[botIndex].name;
        this.sender.bots.splice(botIndex, 1);
        this.saveBots();

        console.log('‚ùå Bot deleted:', botName);
        this.sender.addToLog(`–£–¥–∞–ª–µ–Ω –±–æ—Ç: ${botName}`);

        return true;
    }

    /**
     * –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ –ö –ë–û–¢–£
     */
    addSheetToBot(botId, name, sheetId) {
        const bot = this.sender.bots.find(b => b.id === botId);
        if (!bot) {
            console.warn('–ë–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', botId);
            return null;
        }

        if (!name || !sheetId) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ Google Sheet ID!');
            return null;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å ID —Ç–∞–±–ª–∏—Ü—ã –≤ —Ä–∞–º–∫–∞—Ö —ç—Ç–æ–≥–æ –±–æ—Ç–∞
        if (bot.sheets.some(sheet => sheet.sheetId === sheetId)) {
            alert('–¢–∞–±–ª–∏—Ü–∞ —Å —Ç–∞–∫–∏–º ID —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —ç—Ç–æ–º—É –±–æ—Ç—É!');
            return null;
        }

        const sheet = {
            id: 'sheet_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9),
            name: name.trim(),
            sheetId: sheetId.trim(),
            created: new Date().toISOString()
        };

        bot.sheets.push(sheet);
        this.saveBots();

        console.log('üìä Added sheet to bot:', bot.name, '-', sheet.name);
        this.sender.addToLog(`–î–æ–±–∞–≤–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ "${sheet.name}" –±–æ—Ç—É "${bot.name}"`);

        return sheet;
    }

    /**
     * –£–î–ê–õ–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ –£ –ë–û–¢–ê
     */
    deleteSheetFromBot(botId, sheetId) {
        const bot = this.sender.bots.find(b => b.id === botId);
        if (!bot) return false;

        const sheetIndex = bot.sheets.findIndex(sheet => sheet.id === sheetId);
        if (sheetIndex === -1) return false;

        // –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–∞–±–ª–∏—Ü—É, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä
        if (this.sender.currentSheet && this.sender.currentSheet.id === sheetId) {
            this.sender.currentSheet = null;
            this.updateSheetSelectionUI();
        }

        const sheetName = bot.sheets[sheetIndex].name;
        bot.sheets.splice(sheetIndex, 1);
        this.saveBots();

        console.log('‚ùå Sheet deleted:', sheetName);
        this.sender.addToLog(`–£–¥–∞–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ "${sheetName}"`);

        return true;
    }

    /**
     * –í–´–ë–û–† –ë–û–¢–ê
     */
    selectBot(botId) {
        console.log('ü§ñ selectBot called:', { botId, botsAvailable: this.sender.bots.length });

        if (!botId) {
            console.log('ü§ñ selectBot: No botId provided, clearing selection');
            this.sender.currentBot = null;
            this.sender.currentSheet = null;
            // –í–ê–ñ–ù–û: –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥—É–ª—è –±–æ—Ç–æ–≤
            this.currentBot = null;
            this.currentSheet = null;
        } else {
            const foundBot = this.sender.bots.find(bot => bot.id === botId);
            console.log('ü§ñ selectBot: Find result:', foundBot ? foundBot.name : 'NOT FOUND');

            if (foundBot) {
                // –î–æ–ø–æ–ª–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ –ø–æ–ª–µ–º apiKey –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å –∫–æ–¥–æ–º –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                foundBot.apiKey = foundBot.token;

                this.sender.currentBot = foundBot;
                this.sender.currentSheet = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø—Ä–∏ —Å–º–µ–Ω–µ –±–æ—Ç–∞
                // –í–ê–ñ–ù–û: –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥—É–ª—è –±–æ—Ç–æ–≤
                this.currentBot = foundBot;
                this.currentSheet = null;

                console.log('ü§ñ Bot module internal states updated:', {
                    currentBot: this.currentBot?.name,
                    currentSheet: this.currentSheet?.name,
                    apiKey: this.currentBot?.apiKey ? 'SET' : 'MISSING'
                });
            } else {
                console.error('ü§ñ selectBot: Bot NOT FOUND in array:', {
                    searchingFor: botId,
                    availableBots: this.sender.bots.map(b => b.id)
                });
                this.sender.currentBot = null;
                this.currentBot = null;
                this.currentSheet = null;
            }
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage
        localStorage.setItem('telegram_sender_current_bot', this.sender.currentBot ? this.sender.currentBot.id : '');

        // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –±–æ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –≤ config
        if (this.sender.currentBot && window.CONFIG) {
            window.CONFIG.BOT_TOKEN = this.sender.currentBot.token;
            console.log('ü§ñ Updated config BOT_TOKEN to:', this.sender.currentBot.token.slice(0, 8) + '...');
        }

        this.updateBotSelectionUI();
        this.updateSheetSelectionUI(); // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞

        console.log('ü§ñ Selected bot:', this.sender.currentBot?.name || 'None');
        this.sender.addToLog(`–í—ã–±—Ä–∞–Ω –±–æ—Ç: ${this.sender.currentBot?.name || '–ù–µ—Ç'}`);
    }

    /**
     * –í–´–ë–û–† –õ–ò–°–¢–ê (–¢–ê–ë–õ–ò–¶–´)
     */
    async selectSheet(sheetId) {
        console.log('üìä selectSheet called with:', {
            sheetId,
            currentBot: this.sender.currentBot ? this.sender.currentBot.name : 'null',
            currentBotSheets: this.sender.currentBot ? this.sender.currentBot.sheets.length : 0
        });

        if (!this.sender.currentBot || !sheetId) {
            console.log('üìä SelectSheet: No bot or no sheetId, setting currentSheet to null');
            this.sender.currentSheet = null;
            // –í–ê–ñ–ù–û: –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥—É–ª—è –±–æ—Ç–æ–≤
            this.currentSheet = null;
            this.sender.showStatus('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞ –∏ —Ç–∞–±–ª–∏—Ü—É', 'warning');
        } else {
            this.sender.currentSheet = this.sender.currentBot.sheets.find(sheet => sheet.id === sheetId) || null;
            console.log('üìä SelectSheet: Found sheet:', this.sender.currentSheet ? this.sender.currentSheet.name : 'null');
            // –í–ê–ñ–ù–û: –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –º–æ–¥—É–ª—è –±–æ—Ç–æ–≤
            this.currentSheet = this.sender.currentSheet;

            console.log('üìä Bot module internal states updated in selectSheet:', {
                currentBot: this.currentBot?.name,
                currentSheet: this.currentSheet?.name
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage (–¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)
            localStorage.setItem('telegram_sender_current_sheet', this.sender.currentSheet ? this.sender.currentSheet.id : '');

            // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–∞
            if (this.sender.currentSheet && window.CONFIG) {
                window.CONFIG.SHEET_ID = this.sender.currentSheet.sheetId;
                console.log('üìä Updated config SHEET_ID to:', this.sender.currentSheet.sheetId);

                // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–∞–±–ª–∏—Ü—ã
                try {
                    console.log('üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...', {
                        bot: this.sender.currentBot.name,
                        sheet: this.sender.currentSheet.name,
                        sheetId: this.sender.currentSheet.sheetId
                    });
                    await this.sender.modules.users.reloadUsersData();
                    console.log('‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ');
                    this.sender.showStatus('–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'success');
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:', error);
                    this.sender.showStatus('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'error');
                }
            } else {
                console.log('üìä –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
            }
        }

        this.updateSheetSelectionUI();
        console.log('üìä Final selectSheet result:', {
            currentSheet: this.sender.currentSheet ? this.sender.currentSheet.name : 'null'
        });
        this.sender.addToLog(`–í—ã–±—Ä–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: ${this.sender.currentSheet?.name || '–ù–µ—Ç'}${this.sender.currentSheet ? ' - –∑–∞–≥—Ä—É–∑–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞' : ''}`);
    }

    /**
     * –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ù–´–• –í–´–ë–û–†–û–í
     */
    restoreSavedSelections() {
        try {
            const savedBotId = localStorage.getItem('telegram_sender_current_bot');
            const savedSheetId = localStorage.getItem('telegram_sender_current_sheet');

            console.log('üîÑ Restoring bot selections:', { bot: savedBotId, sheet: savedSheetId });

            if (savedBotId) {
                this.selectBot(savedBotId);
                // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–æ—Ç –≤—ã–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ
                if (savedSheetId && this.sender.currentBot) {
                    this.selectSheet(savedSheetId, false); // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
                }
            }

            console.log('‚úÖ Bot selections restored');
        } catch (error) {
            console.error('‚ùå Failed to restore bot selections:', error);
        }
    }

    /**
     * –î–û–ë–ê–í–õ–ï–ù–ò–ï –ë–û–¢–ê –ß–ï–†–ï–ó WIZARD
     */
    addBotFromWizard() {
        const nameInput = document.getElementById('newBotName');
        const tokenInput = document.getElementById('newBotToken');

        if (!nameInput || !tokenInput) return;

        const name = nameInput.value.trim();
        const token = tokenInput.value.trim();

        if (!name || !token) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }

        const bot = this.addBot(name, token);
        if (bot) {
            nameInput.value = '';
            tokenInput.value = '';
            this.hideBotsWizard();
            // updateBotListContainer —É–∂–µ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ addBot() –º–µ—Ç–æ–¥–µ
        }
    }

    /**
     * –°–ë–†–û–° –í–°–ï–• –ù–ê–°–¢–†–û–ï–ö –ë–û–¢–û–í
     */
    resetAllBotSettings() {
        this.sender.bots = [];
        this.saveBots();
        this.sender.currentBot = null;
        this.sender.currentSheet = null;

        // –°–±—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (window.CONFIG) {
            window.CONFIG.BOT_TOKEN = '';
            window.CONFIG.SHEET_ID = '';
        }

        this.updateBotSelectionUI();
        this.updateSheetSelectionUI();
        this.updateBotListContainer();
        this.sender.addToLog('–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–æ–≤ –∏ —Ç–∞–±–ª–∏—Ü —Å–±—Ä–æ—à–µ–Ω—ã');
        alert('–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–æ–≤ –∏ —Ç–∞–±–ª–∏—Ü —Å–±—Ä–æ—à–µ–Ω—ã!');
    }

    /**
     * –°–ö–†–´–¢–ò–ï WIZARD –ë–û–¢–û–í
     */
    hideBotsWizard() {
        const wizard = document.getElementById('botsWizard');
        if (wizard) {
            wizard.style.display = 'none';
        }
    }

    /**
     * –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ –ß–ï–†–ï–ó WIZARD
     */
    addSheetFromWizard() {
        if (!this.sender.currentBot) {
            alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞!');
            return;
        }

        const nameInput = document.getElementById('newSheetName');
        const idInput = document.getElementById('newSheetId');

        if (!nameInput || !idInput) return;

        const name = nameInput.value.trim();
        const sheetId = idInput.value.trim();

        if (!name || !sheetId) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }

        const sheet = this.addSheetToBot(this.sender.currentBot.id, name, sheetId);
        if (sheet) {
            nameInput.value = '';
            idInput.value = '';
            this.hideSheetsWizard();
            this.updateSheetListContainer();
        }
    }

    /**
     * –°–ö–†–´–¢–ò–ï WIZARD –¢–ê–ë–õ–ò–¶
     */
    hideSheetsWizard() {
        const wizard = document.getElementById('sheetsWizard');
        if (wizard) {
            wizard.style.display = 'none';
        }
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ë–û–¢–û–í –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï
     */
    updateBotListContainer() {
        const container = document.getElementById('botsListContainer');
        if (!container) return;

        if (this.sender.bots.length === 0) {
            container.innerHTML = '–ë–æ—Ç—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã';
            return;
        }

        const botsHtml = this.sender.bots.map(bot => `
            <div style="margin: 5px 0; padding: 8px; border: 1px solid #ddd; border-radius: 5px;">
                <strong>${bot.name}</strong>
                <small style="color: #666;"> (${bot.sheets.length} —Ç–∞–±–ª–∏—Ü)</small>
                <div style="float: right; display: flex; gap: 4px;">
                    <button style="background: #17a2b8; color: white; border: none; border-radius: 3px; padding: 2px 6px; font-size: 11px;" onclick="selectBotFromList('${bot.id}');">–í—ã–±—Ä–∞—Ç—å</button>
                    <button style="background: #dc3545; color: white; border: none; border-radius: 3px; padding: 2px 6px; font-size: 11px;" onclick="if(confirm('–£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞ –∏ –≤—Å–µ –µ–≥–æ —Ç–∞–±–ª–∏—Ü—ã?')) { deleteBotFromList('${bot.id}'); }">‚ùå</button>
                </div>
                <div style="clear: both;"></div>
            </div>
        `).join('');

        container.innerHTML = botsHtml;
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ü–ò–°–ö–ê –¢–ê–ë–õ–ò–¶ –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï
     */
    updateSheetListContainer() {
        const container = document.getElementById('sheetsListContainer');
        if (!container) return;

        if (!this.sender.currentBot || this.sender.currentBot.sheets.length === 0) {
            container.innerHTML = '–¢–∞–±–ª–∏—Ü—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã';
            return;
        }

        const sheetsHtml = this.sender.currentBot.sheets.map(sheet => `
            <div style="margin: 5px 0; padding: 8px; border: 1px solid #ddd; border-radius: 5px;">
                <strong>${sheet.name}</strong>
                <small style="color: #666;"> (${sheet.sheetId})</small>
                <button style="float: right; background: #dc3545; color: white; border: none; border-radius: 3px; padding: 2px 6px; font-size: 11px;" onclick="if(confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç–∞–±–ª–∏—Ü—É?')) window.telegramSender.modules.bots.deleteSheetFromBot('${this.sender.currentBot.id}', '${sheet.id}'); window.telegramSender.modules.bots.updateSheetListContainer();">‚ùå</button>
                <div style="clear: both;"></div>
            </div>
        `).join('');

        container.innerHTML = sheetsHtml;
    }

    /**
     * –ü–û–ö–ê–ó WIZARD –ë–û–¢–û–í
     */
    showBotsWizard() {
        console.log('ü§ñ Opening bots wizard...');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º backdrop
        const backdrop = document.getElementById('modalBackdrop');
        if (backdrop) {
            backdrop.classList.add('show');
            console.log('‚úÖ Modal backdrop shown');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const wizard = document.getElementById('botsWizard');
        if (wizard) {
            wizard.style.display = 'block';
            this.updateBotListContainer();
            console.log('‚úÖ Bots wizard shown');
        } else {
            console.error('‚ùå Bots wizard element not found');
        }
    }

    /**
     * –ü–û–ö–ê–ó WIZARD –¢–ê–ë–õ–ò–¶
     */
    showSheetsWizard() {
        const wizard = document.getElementById('sheetsWizard');
        if (wizard) {
            const header = document.getElementById('sheetsWizardHeader');
            if (header) {
                header.innerHTML = this.sender.currentBot ?
                    `–î–ª—è –±–æ—Ç–∞: <strong>${this.sender.currentBot.name}</strong>` :
                    '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞';
            }
            wizard.style.display = 'block';
            this.updateSheetListContainer();
        }
    }

    /**
     * –ó–ê–ì–†–£–ó–ö–ê –ù–ê–°–¢–†–û–ï–ö –ë–û–¢–û–í –ò–ó localStorage
     */
    loadBots() {
        try {
            const data = localStorage.getItem('telegram_sender_bots');
            this.sender.bots = data ? JSON.parse(data) : [];
            console.log('ü§ñ Loaded bots:', this.sender.bots.length);

            // –í–ê–ñ–ù–û: –¢–∞–∫–∂–µ –∫–æ–ø–∏—Ä—É–µ–º –≤ –º–æ–¥—É–ª—å –±–æ—Ç–æ–≤ –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Ä–∞–±–æ—Ç—ã
            this.bots = [...this.sender.bots];
        } catch (error) {
            console.warn('‚ùå Failed to load bots:', error);
            this.sender.bots = [];
            this.bots = [];
        }
    }

    /**
     * –°–û–•–†–ê–ù–ï–ù–ò–ï –ë–û–¢–û–í –í localStorage
     */
    saveBots() {
        try {
            localStorage.setItem('telegram_sender_bots', JSON.stringify(this.sender.bots));
            console.log('üíæ Bots saved');
        } catch (error) {
            console.error('‚ùå Failed to save bots:', error);
        }
    }

    /**
     * –†–ï–ù–î–ï–† –°–ü–ò–°–ö–ê –ë–û–¢–û–í –í –°–ï–õ–ï–ö–¢–ï
     */
    renderBotsDropdown() {
        const botsList = document.getElementById('botsList');
        if (!botsList) return;

        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π
        while (botsList.options.length > 1) {
            botsList.remove(1);
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ—Ö –±–æ—Ç–æ–≤
        this.sender.bots.forEach(bot => {
            const option = document.createElement('option');
            option.value = bot.id;
            option.textContent = `ü§ñ ${bot.name} (${bot.sheets.length} —Ç–∞–±–ª–∏—Ü)`;
            botsList.appendChild(option);
        });

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä
        if (this.sender.currentBot) {
            botsList.value = this.sender.currentBot.id;
        } else {
            botsList.value = '';
        }
    }

    /**
     * –†–ï–ù–î–ï–† –°–ü–ò–°–ö–ê –¢–ê–ë–õ–ò–¶ –í –°–ï–õ–ï–ö–¢–ï
     */
    renderSheetsDropdown() {
        const sheetsList = document.getElementById('sheetsList');
        if (!sheetsList) return;

        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π
        while (sheetsList.options.length > 1) {
            sheetsList.remove(1);
        }

        if (this.sender.currentBot && this.sender.currentBot.sheets.length > 0) {
            // –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã —Ç–µ–∫—É—â–µ–≥–æ –±–æ—Ç–∞
            this.sender.currentBot.sheets.forEach(sheet => {
                const option = document.createElement('option');
                option.value = sheet.id;
                option.textContent = `üìä ${sheet.name}`;
                sheetsList.appendChild(option);
            });

            // –í–∫–ª—é—á–∞–µ–º —Å–µ–ª–µ–∫—Ç
            sheetsList.disabled = false;

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä
            if (this.sender.currentSheet) {
                sheetsList.value = this.sender.currentSheet.id;
            } else {
                sheetsList.value = '';
            }
        } else {
            // –ù–µ—Ç —Ç–∞–±–ª–∏—Ü - –æ—Ç–∫–ª—é—á–∞–µ–º —Å–µ–ª–µ–∫—Ç
            sheetsList.disabled = true;
            sheetsList.value = '';
        }
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–ò–ï UI –ü–†–ò –í–´–ë–û–†–ï –ë–û–¢–ê
     */
    updateBotSelectionUI() {
        const currentBotInfo = document.getElementById('currentBotInfo');
        if (currentBotInfo) {
            if (this.sender.currentBot) {
                currentBotInfo.innerHTML = `
                    <strong>${this.sender.currentBot.name}</strong><br>
                    –¢–∞–±–ª–∏—Ü: ${this.sender.currentBot.sheets.length}<br>
                    <small>–¢–æ–∫–µ–Ω: ${this.sender.currentBot.token.substring(0, 8)}...${this.sender.currentBot.token.substring(-3)}</small>
                `;
                currentBotInfo.style.background = '#e8f5e8';
            } else {
                currentBotInfo.innerHTML = '–ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞';
                currentBotInfo.style.background = '#f0f0f0';
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç –±–æ—Ç–æ–≤
        this.renderBotsDropdown();
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–ò–ï UI –ü–†–ò –í–´–ë–û–†–ï –¢–ê–ë–õ–ò–¶–´
     */
    updateSheetSelectionUI() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç —Ç–∞–±–ª–∏—Ü
        this.renderSheetsDropdown();
    }

    /**
     * –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í –ë–û–¢–û–í –ò –¢–ê–ë–õ–ò–¶
     */
    setupBotEventListeners() {
        console.log('ü§ñ Setting up bot event listeners...');

        // –°–µ–ª–µ–∫—Ç –±–æ—Ç–æ–≤
        const botsList = document.getElementById('botsList');
        if (botsList) {
            botsList.addEventListener('change', (e) => {
                const botId = e.target.value;
                this.selectBot(botId);
            });
            console.log('‚úÖ Bots list listener added');
        }

        // –°–µ–ª–µ–∫—Ç —Ç–∞–±–ª–∏—Ü
        const sheetsList = document.getElementById('sheetsList');
        if (sheetsList) {
            sheetsList.addEventListener('change', (e) => {
                const sheetId = e.target.value;
                this.selectSheet(sheetId);
            });
            console.log('‚úÖ Sheets list listener added');
        }

        console.log('‚úÖ Bot event listeners setup completed');
    }

    /**
     * –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ù–´–• –í–´–ë–û–†–û–í
     */
    restoreSavedSelections() {
        try {
            const savedBotId = localStorage.getItem('telegram_sender_current_bot');
            const savedSheetId = localStorage.getItem('telegram_sender_current_sheet');

            console.log('üîÑ Restoring bot selections:', { bot: savedBotId, sheet: savedSheetId });

            if (savedBotId) {
                this.selectBot(savedBotId); // –¢–µ–ø–µ—Ä—å selectBot() –¥–æ–±–∞–≤–∏—Ç –ø–æ–ª–µ apiKey
                if (savedSheetId && this.sender.currentBot) {
                    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ë–ï–ó –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                    // –ó–∞–≥—Ä—É–∑–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø–æ —è–≤–Ω–æ–º—É –¥–µ–π—Å—Ç–≤–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    this.restoreSheetSelection(savedSheetId);
                }
            }

            console.log('‚úÖ Bot selections restored');
        } catch (error) {
            console.error('‚ùå Failed to restore bot selections:', error);
        }
    }

    /**
     * –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –í–´–ë–û–†–ê –¢–ê–ë–õ–ò–¶–´ –ë–ï–ó –ó–ê–ì–†–£–ó–ö–ò –î–ê–ù–ù–´–•
     */
    restoreSheetSelection(sheetId) {
        console.log('üìä restoreSheetSelection called with:', {
            sheetId,
            currentBot: this.sender.currentBot ? this.sender.currentBot.name : 'null'
        });

        if (!this.sender.currentBot) {
            console.log('üìä restoreSheetSelection: No current bot');
            return false;
        }

        const foundSheet = this.sender.currentBot.sheets.find(sheet => sheet.id === sheetId);

        if (foundSheet) {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            this.sender.currentSheet = foundSheet;
            if (window.CONFIG) {
                window.CONFIG.SHEET_ID = foundSheet.sheetId;
                console.log('üìä Restored config SHEET_ID to:', foundSheet.sheetId);
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º UI
            this.updateSheetSelectionUI();

            console.log('üìä Sheet selection restored:', foundSheet.name);
            this.sender.addToLog(`–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞: ${foundSheet.name}`);
            return true;
        } else {
            console.warn('üìä restoreSheetSelection: Sheet not found:', sheetId);
            localStorage.setItem('telegram_sender_current_sheet', '');
            return false;
        }
    }

    /**
     * –î–û–ë–ê–í–õ–ï–ù–ò–ï –ë–û–¢–ê –ß–ï–†–ï–ó WIZARD
     */
    addBotFromWizard() {
        const nameInput = document.getElementById('newBotName');
        const tokenInput = document.getElementById('newBotToken');

        if (!nameInput || !tokenInput) return;

        const name = nameInput.value.trim();
        const token = tokenInput.value.trim();

        if (!name || !token) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }

        const bot = this.addBot(name, token);
        if (bot) {
            nameInput.value = '';
            tokenInput.value = '';
            this.hideBotsWizard();
            this.updateBotListContainer();
        }
    }

    /**
     * –°–ë–†–û–° –í–°–ï–• –ù–ê–°–¢–†–û–ï–ö –ë–û–¢–û–í
     */
    resetAllBotSettings() {
        this.sender.bots = [];
        this.saveBots();
        this.sender.currentBot = null;
        this.sender.currentSheet = null;

        // –°–±—Ä–æ—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if (window.CONFIG) {
            window.CONFIG.BOT_TOKEN = '';
            window.CONFIG.SHEET_ID = '';
        }

        this.updateBotSelectionUI();
        this.updateSheetSelectionUI();
        this.updateBotListContainer();
        this.sender.addToLog('–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–æ–≤ –∏ —Ç–∞–±–ª–∏—Ü —Å–±—Ä–æ—à–µ–Ω—ã');
        alert('–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–æ–≤ –∏ —Ç–∞–±–ª–∏—Ü —Å–±—Ä–æ—à–µ–Ω—ã!');
    }

    /**
     * –°–ö–†–´–¢–ò–ï WIZARD –ë–û–¢–û–í
     */
    hideBotsWizard() {
        const wizard = document.getElementById('botsWizard');
        if (wizard) {
            wizard.style.display = 'none';
        }
    }

    /**
     * –î–û–ë–ê–í–õ–ï–ù–ò–ï –¢–ê–ë–õ–ò–¶–´ –ß–ï–†–ï–ó WIZARD
     */
    addSheetFromWizard() {
        if (!this.sender.currentBot) {
            alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞!');
            return;
        }

        const nameInput = document.getElementById('newSheetName');
        const idInput = document.getElementById('newSheetId');

        if (!nameInput || !idInput) return;

        const name = nameInput.value.trim();
        const sheetId = idInput.value.trim();

        if (!name || !sheetId) {
            alert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!');
            return;
        }

        const sheet = this.addSheetToBot(this.sender.currentBot.id, name, sheetId);
        if (sheet) {
            nameInput.value = '';
            idInput.value = '';
            this.hideSheetsWizard();
            this.updateSheetListContainer();
        }
    }

    /**
     * –°–ö–†–´–¢–ò–ï WIZARD –¢–ê–ë–õ–ò–¶
     */
    hideSheetsWizard() {
        const wizard = document.getElementById('sheetsWizard');
        if (wizard) {
            wizard.style.display = 'none';
        }
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ë–û–¢–û–í –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï
     */
    updateBotListContainer() {
        const container = document.getElementById('botsListContainer');
        if (!container) return;

        if (this.sender.bots.length === 0) {
            container.innerHTML = '–ë–æ—Ç—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã';
            return;
        }

                const botsHtml = this.sender.bots.map(bot => `
            <div style="margin: 5px 0; padding: 8px; border: 1px solid #ddd; border-radius: 5px;">
                <strong>${bot.name}</strong>
                <small style="color: #666;"> (${bot.sheets.length} —Ç–∞–±–ª–∏—Ü)</small>
                <div style="float: right; display: flex; gap: 4px;">
                    <button style="background: #17a2b8; color: white; border: none; border-radius: 3px; padding: 2px 6px; font-size: 11px;" onclick="window.telegramSender.modules.bots.selectBot('${bot.id}'); window.telegramSender.closeAllModals();">–í—ã–±—Ä–∞—Ç—å</button>
                    <button style="background: #dc3545; color: white; border: none; border-radius: 3px; padding: 2px 6px; font-size: 11px;" onclick="if(confirm('–£–¥–∞–ª–∏—Ç—å –±–æ—Ç–∞ –∏ –≤—Å–µ –µ–≥–æ —Ç–∞–±–ª–∏—Ü—ã?')) { window.telegramSender.modules.bots.deleteBot('${bot.id}'); window.telegramSender.modules.bots.updateBotListContainer(); }">‚ùå</button>
                </div>
                <div style="clear: both;"></div>
            </div>
        `).join('');

        container.innerHTML = botsHtml;
    }

    /**
     * –û–ë–ù–û–í–õ–ï–ù–ò–ï –°–ü–ò–°–ö–ê –¢–ê–ë–õ–ò–¶ –í –ö–û–ù–¢–ï–ô–ù–ï–†–ï
     */
    updateSheetListContainer() {
        const container = document.getElementById('sheetsListContainer');
        if (!container) return;

        if (!this.sender.currentBot || this.sender.currentBot.sheets.length === 0) {
            container.innerHTML = '–¢–∞–±–ª–∏—Ü—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã';
            return;
        }

        const sheetsHtml = this.sender.currentBot.sheets.map(sheet => `
            <div style="margin: 5px 0; padding: 8px; border: 1px solid #ddd; border-radius: 5px;">
                <strong>${sheet.name}</strong>
                <small style="color: #666;"> (${sheet.sheetId})</small>
                <button style="float: right; background: #dc3545; color: white; border: none; border-radius: 3px; padding: 2px 6px; font-size: 11px;" onclick="if(confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç–∞–±–ª–∏—Ü—É?')) window.telegramSender.botsModule.deleteSheetFromBot('${this.sender.currentBot.id}', '${sheet.id}'); window.telegramSender.botsModule.updateSheetListContainer();">‚ùå</button>
                <div style="clear: both;"></div>
            </div>
        `).join('');

        container.innerHTML = sheetsHtml;
    }

    /**
     * –ü–û–ö–ê–ó WIZARD –ë–û–¢–û–í
     */
    showBotsWizard() {
        console.log('ü§ñ Opening bots wizard...');

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º backdrop
        const backdrop = document.getElementById('modalBackdrop');
        if (backdrop) {
            backdrop.classList.add('show');
            console.log('‚úÖ Modal backdrop shown');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const wizard = document.getElementById('botsWizard');
        if (wizard) {
            wizard.style.display = 'block';
            this.updateBotListContainer();
            console.log('‚úÖ Bots wizard shown');
        } else {
            console.error('‚ùå Bots wizard element not found');
        }
    }

    /**
     * –ü–û–ö–ê–ó WIZARD –¢–ê–ë–õ–ò–¶
     */
    showSheetsWizard() {
        const wizard = document.getElementById('sheetsWizard');
        if (wizard) {
            const header = document.getElementById('sheetsWizardHeader');
            if (header) {
                header.innerHTML = this.sender.currentBot ?
                    `–î–ª—è –±–æ—Ç–∞: <strong>${this.sender.currentBot.name}</strong>` :
                    '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞';
            }
            wizard.style.display = 'block';
            this.updateSheetListContainer();
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π —Å—Ä–µ–¥—ã
if (typeof module !== 'undefined' && module.exports) {
    module.exports = TelegramBots;
} else {
    // –î–ª—è –±—Ä–∞—É–∑–µ—Ä–∞ - —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ
    window.TelegramBots = TelegramBots;
}
